Critical (before release):
* make sure that towpilot works: pilot log, flight list
* rhst: export/import - some are "changed", although identical
* Better error documents
* Custom log albgen style
* Use table_for plugin
* Use new schema
* remove old config file

Major (important changes):
* people list is extremely slow, even though paginated, probably due to user
  (overwrite select is way faster)
* overwrite perform is also slow
* Add option to log in permanently
* There are rails classes for durations
* database.yml.dist
* attempt/redo can get into endless loop; better redo_once
* Select "Other" radio button when "other" date field is edited (javascript)
* Invocation
  * ssl redirect in htaccess, and add warning if ssl is off
  * make relative_url_root setting independent of the script name by removing
    the last component and optionally a public compoment
  * document that relative_url_root setting has to be changed if the dispatcher
    name is changed
* Templates
  * template for HTML file (yield body)
  * get rid of flight_count partial
  * get rid of date_range partial (use an escaper block)
  * tables as text
  * link to "delete" on user/person show
* Error handling
  * Send mail on exception
  * Handling of non-existent objects, e. g. person for user
  * Startup error (e. g. database connection) error reporting is poor
* Overwriting
  * overwrite_select: removal of person collides with pagination
* Import
  * need to do 'dry run' to detect errors, e. g. club ID already taken on change
  * transaction does not seem to work: one created, one fails
  * unit tests for import
  * import errors: show club in tables
  * all clubs and values tested should be stripped (what about trailing blanks
    in database?)
  * import people: undefinedness if the database is modified between identify and
    perform
  * review: show names of unknown columns
  * columns with missing value: treat as "" instead?
* People list
  * Filter by club (also overwrite and person selection)
  * Filter a la portal
  * link to list_people: correct page
* Models
  * Flight model: has_many :flights, :foreign_key => 'pilot' (and begleiter and
    towpilot); then use flights.count in Person.used?
  * flight model: add towplane and towpilot associations
  * user model: rename associated_person to the_person
  * Flight.<=> (and use sort instead of sort_by)
  * Better handling of utf8 characters
* User
  * Person selection on create user
  * user person_select: cancel button; requires: store original person in
    user[person], additionally new_person
  * subform: better controller subdivision; maybe store person under edit in
    session (but allow multiple!)
* Date
  * invalid date handling
* Style
  * table border transparent instead of white
* URLs
  * Improve automatic relative_url_root detection: only do once
  * better redirect to origin - if multiple user edit windows are open, all of
    them will redirect back to the last one
  * redirect to origin does not work after user udpate if person selection was
    used
  * Create person/user: back to origin
  * redirect_to :back: default values
  * redirect back after edit to correct page/with anchor
  * after reloading the login page, the origin is gone
  * add origin to login form instead of session => even works when cookies are
    disabled
* Statistics
  * consider towflights for pilot log
  * PlaneLogEntry.create_merged: add "Towflight" or "Towflights" to comments
    list
  * Towplane in pilot log: D-XXXX 12' instead of 0:12
* Bugs
  * make it not break on flights with NULL date (Flight.new.save)
* Database
  * Can the _temp table duplication be supported through something like
    :finder_sql?
* Permissions
  * specify for all actions of a controller
  * allow exceptions to a permission for all actions of a controller
    (e. g. change own password)
  * make "require_login" override "require_permission" (?) and rename it
  * require_permission: require "perm, a" or "perm, [a, b, ...]"
  * permission for granting permissions on edit and create user
* Views
  * use thead and tbody for tables
  * Links to documentation
* Editing
  * delete confirmation without javascript
    (http://brandonaaron.net/blog/2009/02/25/unobtrusive-destroy-links-in-rails-using-jquery)
* Controllers
  * Move functionality from people controller to model

Minor (less important changes or much work):
* Templates
  * Layout for "box in stretcher"?
* Style
  * size of buttons and links is not the same for pagination
  * hover not for disabled pagination buttons
* Queries
  * people_list is very slow => prefetch all users (not so bad b/c paginated)
* Views
  * Buttons in overwrite_confirm: can they be in the same form? Then remove
    table
* Settings
  * plugin path
  * Read config file in initializer?
* Models
  * flight: rename to the_launch_type
  * use alias_attribute in all models
* Session
  * delete uploaded import data on logout
* Date
  * make class DateRange
* Routes
  * route /person/1/overwrite/2
* Editing
  * When overwriting a person, display their number of flights
  * "Create user" for person if there is none yet
  * prevent user taking "club administrator" from himself
* Error handling
  * When using time_range, recover from ArgumentError (invalid date), redirect
    to the form, display an error message and preenter the (erroneous) values
  * User not found: 404 or error message
  * What happens if a user is deleted while logged in?
* CSV
  * look into fastercsv
* Import
  * Allow per-person club specification when importing
  * in unclear cases, let the user select candidates
  * if there are people with the same club or in another club: suggest
    :merge (for misspelled clubs)
  * let the user uncheck entries
  * don't display symmetric errors twice
  * errors: highlight erroneous fields
  * Import person success message: pluralization
* URLs
  * Redirect back after login doeesn't work for debug on/off
  * Wrong redirect target when login for pilot_log, but no person
  * Improve redirect after session settings, so deactivating debug from redirect
    page redirects back (but works correctly, even directly after activating)
* Requests
  * move local_network? to request

Nice to have:
* consolidate tabel partial and table_for
* create/edit planes
* create/edit flights
* form error messages for individual inputs
* pagination like at erweiterungen.de

After launch types in database:
* :readonly=>true in lauch type queries

* If LaTeX is used:
* Better error handling, for example: pstricks not installed
* layout for tex
* generate_pdf: option for calling LaTeX 1/2/3 times

